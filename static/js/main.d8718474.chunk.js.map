{"version":3,"sources":["components/AccountBalance.js","components/Home.js","components/UserProfile.js","components/Login.js","components/Credits.js","components/Debits.js","App.js","reportWebVitals.js","index.js"],"names":["AccountBalance","Component","render","_jsxs","children","this","props","accountBalance","Home","_jsx","src","alt","Link","to","UserProfile","userName","memberSince","LogIn","constructor","super","handleChange","e","updatedUser","state","user","target","value","setState","handleSubmit","preventDefault","mockLogIn","redirect","password","Redirect","onSubmit","type","name","defaultValue","onChange","Credits","creditsView","credits","map","credit","amount","description","Date","date","toISOString","split","id","event","updateBalance","Number","length","addCredit","min","step","Debits","debitsView","debits","debit","addDebit","App","balance","addDebits","debitList","addCredits","creditList","logInInfo","newUser","currentUser","Router","basename","Route","exact","path","HomeComponent","UserProfileComponent","LogInComponent","CreditsComponent","DebitsComponent","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d8718474.chunk.js","sourcesContent":["/*==================================================\nsrc/components/AccountBalance.js\n\nThe AccountBalance component displays account balance. It is included in other page views.\n==================================================*/\nimport React, {Component} from 'react';\n\nclass AccountBalance extends Component {\n  // Display account balance\n  render() {\n    return (\n      <div>\n        Balance: {this.props.accountBalance}\n      </div>\n    );\n  }\n}\n\nexport default AccountBalance;","/*==================================================\nsrc/components/Home.js\n\nThe Home component is used to demonstrate the use of Link.\n==================================================*/\nimport React, {Component} from 'react';\nimport AccountBalance from './AccountBalance';\nimport {Link} from 'react-router-dom';\n\nclass Home extends Component {\n  render() {\n    return (\n      <div>\n        <img src=\"https://picsum.photos/200/200\" alt=\"bank\"/>\n\n        <h1>Bank of React</h1>\n\n        <Link to=\"/userProfile\">User Profile</Link>\n        <br/>\n        <Link to=\"/login\">Login</Link>\n        <br/>\n        <Link to=\"/credits\">Credits (to be implemented in the Assignment)</Link>\n        <br/>\n        <Link to=\"/debits\">Debits (to be implemented in the Assignment)</Link>\n        <br/><br/>\n        <AccountBalance accountBalance={this.props.accountBalance}/>\n      </div>\n    );\n  }\n}\n\nexport default Home;","/*==================================================\nsrc/components/UserProfile.js\n\nThe UserProfile component is used to demonstrate the use of Route and Link.\nNote: You don't need to work on this file for the Assignment.\n==================================================*/\nimport React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\n\nclass UserProfile extends Component {\n  render() {\n    return (\n      <div>\n        <h1>User Profile</h1>\n\n        <div>Username: {this.props.userName}</div>\n        <div>Member Since: {this.props.memberSince}</div>\n        <br/>\n        <Link to=\"/\">Return to Home</Link>\n      </div>\n    );\n  }\n}\n\nexport default UserProfile;","/*==================================================\nsrc/components/Login.js\n\nThe LogIn component is used to demonstrate the use of Redirect.\nNote: You don't need to work on this file for the Assignment.\n==================================================*/\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport {Link} from 'react-router-dom';\n\nclass LogIn extends Component {\n  constructor (props) {  // Create and initialize state\n    super(props)\n    this.state = {\n      user: {\n        //userName: '',\n        userName: this.props.user.userName,  // Initialize userName using props input (currentUser in App.js)\n        password: ''\n      },\n      redirect: false  // Redirect property used to trigger Redirect\n    }\n  }\n\n  // When User Name input is changed, capture the new input value and update state\n  handleChange = (e) => {\n    const updatedUser = {...this.state.user};  // Create an object for state\n    updatedUser.userName = e.target.value;  // Set object's userName to the new input value\n    this.setState({user: updatedUser})  // Update state with object values\n  }\n\n  // When user clicked \"Log In\" button, store user data and then redirect to \"User Profile\" page\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.props.mockLogIn(this.state.user)  // Update state in the top-level component (App.js)\n    this.setState({redirect: true})  // Update state to trigger Redirect\n  }\n  \n  render () {\n    // Redirect to \"User Profile\" page when \"Log In\" button is clicked\n    if (this.state.redirect) {  \n      return (<Redirect to=\"/userProfile\"/>);\n    }\n\n    // Render the login form (and call \"handleSubmit\" method when \"Log In\" button is clicked to submit form)\n    return (\n      <div>\n        <h1>Login</h1>\n        \n        <form onSubmit={this.handleSubmit}>\n          <div>\n            <label>User Name</label>\n            <input type=\"text\" name=\"userName\" defaultValue={this.props.user.userName} onChange={this.handleChange} />\n          </div>\n          <div>\n            <label>Password</label>\n            <input type=\"password\" name=\"password\" />\n          </div>\n          <button>Log In</button>\n        </form>  \n        <br/>\n        <Link to=\"/\">Return to Home</Link>\n      </div>\n    );\n  }\n}\n\nexport default LogIn;","/*==================================================\r\nsrc/components/Credits.js\r\n\r\nThe Credits component contains information for Credits page view.\r\nNote: You need to work on this file for the Assignment.\r\n==================================================*/\r\nimport {Link} from 'react-router-dom';\r\nimport AccountBalance from './AccountBalance';\r\n\r\nconst Credits = (props) => {\r\n  let creditsView = () => {\r\n    const { credits } = props;\r\n    return credits.map((credit) => {  // Extract \"id\", \"amount\", \"description\" and \"date\" properties of each debits JSON array element\r\n      return <li key={credit.id}>{credit.amount} {credit.description} {new Date(credit.date).toISOString().split('T')[0]}</li>\r\n    });\r\n  }\r\n\r\n\r\n  let updateEntry = (event) => {\r\n    event.preventDefault();\r\n    props.updateBalance([Number(props.accountBalance) + Number(event.target.amount.value)]);\r\n\r\n    const credit = {\r\n      id: props.credits.length + 1,\r\n      description: event.target.description.value,\r\n      amount: event.target.amount.value,\r\n      date: new Date()\r\n    }\r\n\r\n    props.addCredit(credit);\r\n  }\r\n  return (\r\n    <div>\r\n      <h1>Credits</h1>\r\n      <AccountBalance accountBalance={props.accountBalance}/>\r\n      {creditsView()}\r\n\r\n      <form onSubmit={updateEntry}>\r\n        <input type=\"text\" name=\"description\" />\r\n        <input type=\"number\" min=\"0\"  step=\"0.01\" name=\"amount\" />\r\n        <button type=\"submit\">Add Credit</button>\r\n      </form>\r\n      <br/>\r\n      <Link to=\"/\">Return to Home</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Credits; \r\n","/*==================================================\r\nsrc/components/Debits.js\r\n\r\nThe Debits component contains information for Debits page view.\r\nNote: You need to work on this file for the Assignment.\r\n==================================================*/\r\nimport {Link} from 'react-router-dom';\r\nimport AccountBalance from './AccountBalance';\r\n\r\nconst Debits = (props) => {\r\n  // Create the list of Debit items\r\n  let debitsView = () => {\r\n    const { debits } = props;\r\n    return debits.map((debit) => {  // Extract \"id\", \"amount\", \"description\" and \"date\" properties of each debits JSON array element\r\n      return <li key={debit.id}>{debit.amount} {debit.description} {new Date(debit.date).toISOString().split('T')[0]}</li>\r\n    });\r\n  }\r\n\r\n\r\n  let updateEntry = (event) => {\r\n    event.preventDefault();\r\n    props.updateBalance([props.accountBalance - event.target.amount.value]);\r\n\r\n    const debit = {\r\n      id: props.debits.length + 1,\r\n      description: event.target.description.value,\r\n      amount: event.target.amount.value,\r\n      date: new Date()\r\n    }\r\n\r\n    props.addDebit(debit);\r\n  }\r\n  // Render the list of Debit items and a form to input new Debit item\r\n  return (\r\n    <div>\r\n      <h1>Debits</h1>\r\n      <AccountBalance accountBalance={props.accountBalance}/>\r\n      {debitsView()}\r\n\r\n      <form onSubmit={updateEntry}>\r\n        <input type=\"text\" name=\"description\" />\r\n        <input type=\"number\" min=\"0\" step=\"0.01\" name=\"amount\" />\r\n        <button type=\"submit\">Add Debit</button>\r\n      </form>\r\n      <br/>\r\n      <Link to=\"/\">Return to Home</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Debits;\r\n","/*==================================================\r\nsrc/App.js\r\n\r\nThis is the top-level component of the app.\r\nIt contains the top-level state.\r\n==================================================*/\r\nimport React, {Component} from 'react';\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\r\n\r\n// Import other components\r\nimport Home from './components/Home';\r\nimport UserProfile from './components/UserProfile';\r\nimport LogIn from './components/Login';\r\nimport Credits from './components/Credits';\r\nimport Debits from './components/Debits';\r\n\r\nclass App extends Component {\r\n  constructor() {  // Create and initialize state\r\n    super(); \r\n    this.state = {\r\n      accountBalance: 1234567.89,\r\n      creditList: [],\r\n      debitList: [],\r\n      currentUser: {\r\n        userName: 'Joe Smith',\r\n        memberSince: '11/22/99',\r\n      }\r\n    };\r\n  }\r\n  updateBalance = (balance) => {\r\n    this.setState({\r\n      accountBalance : balance\r\n    });\r\n  }\r\n\r\n  addDebits = (debit) => {\r\n    this.setState({\r\n      debitList : [...this.state.debitList, debit]\r\n    });\r\n  }\r\n\r\n  addCredits = (credit) => {\r\n    this.setState({\r\n      creditList : [...this.state.creditList, credit]\r\n    });\r\n  }\r\n\r\n  // Update state's currentUser (userName) after \"Log In\" button is clicked\r\n  mockLogIn = (logInInfo) => {  \r\n    const newUser = {...this.state.currentUser};\r\n    newUser.userName = logInInfo.userName;\r\n    this.setState({currentUser: newUser})\r\n  }\r\n\r\n  // Create Routes and React elements to be rendered using React components\r\n  render() {  \r\n    // Create React elements and pass input props to components\r\n    const HomeComponent = () => (<Home accountBalance={this.state.accountBalance} />)\r\n    const UserProfileComponent = () => (\r\n      <UserProfile userName={this.state.currentUser.userName} memberSince={this.state.currentUser.memberSince} />\r\n    )\r\n    const LogInComponent = () => (<LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn} />)\r\n    const CreditsComponent = () => (<Credits credits={this.state.creditList} accountBalance = {this.state.accountBalance} updateBalance = {this.updateBalance} addCredit = {this.addCredits}/>) \r\n    const DebitsComponent = () => (<Debits debits={this.state.debitList} accountBalance = {this.state.accountBalance} updateBalance = {this.updateBalance} addDebit = {this.addDebits}/> ) \r\n\r\n    // Important: Include the \"basename\" in Router, which is needed for deploying the React app to GitHub Pages\r\n    return (\r\n      <Router basename=\"/Bank-Assignment-3\">\r\n        <div>\r\n          <Route exact path=\"/\" render={HomeComponent}/>\r\n          <Route exact path=\"/userProfile\" render={UserProfileComponent}/>\r\n          <Route exact path=\"/login\" render={LogInComponent}/>\r\n          <Route exact path=\"/credits\" render={CreditsComponent}/>\r\n          <Route exact path=\"/debits\" render={DebitsComponent}/>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/*==================================================\nsrc/index.js\n\nThis file renders the top-level component App which contains all components of the app).\n==================================================*/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n// Note: In above, StrictMode is a tool for highlighting potential problems in an application. \n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}